@{
    ViewBag.Title = "Home Page";
}

<br />
<hr />

<div id="calendar"></div>

<!-- This is to display information "on-click" when a user clicks on events -->

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Delete
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Memory</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <input type="hidden" id="hdnoteID" value="0" />
                    <div class="form-group">
                        <label>Date</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- The following few lines references the css and javascript files for Fullcalendar
     Should edit it so that it works with the fullcalendar library downloaded in BabysFirstCalendar
     But it breaks once I reference the other stylesheets/scripts -->
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

    <script>

        //This script pulls the memories from the JSONResult in C#
        //We use the StringDate instead of the regular Date since its format is
        //more human-friendly.

        $(document).ready(function () {
            var events = [];
            var selectedEvent = null;
            FetchMemoriesAndRenderCalendar();

            //Displays the memories and pushes data to individual events
            function FetchMemoriesAndRenderCalendar() {
                events = [];
                $.ajax({
                    type: "GET",
                    url: "/home/DisplayMemories",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            events.push({
                                noteID: v.NoteID,
                                title: v.Text,
                                description: v.Text,
                                start: v.StringDate,
                                extendedProps: {
                                    hasPhoto: v.HasPhoto
                                }
                            });
                        })

                        GenerateCalendar(events);
                    },
                    error: function (error) {
                        alert('Failed to retrieve memories');
                    }
                })
            }

            //This actually makes the calendar and defines its parameters

            function GenerateCalendar(events) {
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    buttonText: {
                        prev: 'Previous', // <
                        next: 'Next' // >
                    },
                    contentHeight: 500,
                    defaultDate: new Date(),

                    //Don't display event time, since all memories are "all day events"
                    displayEventTime: false,

                    //For some reason, the next button has to be in the center to display on the right, and the title
                    //has to be in the right to display in the center. I don't know why but it works this way?
                    header: {
                        left: 'prev',
                        center: 'next',
                        right: 'title'
                    },
                    timeFormat: 'h(:mm)a',
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,

                    //Changes what happens when people click the calendar
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedEvent = calEvent;
                        selectedEvent.noteID = calEvent.noteID;
                        $('#myModal #eventTitle').text(calEvent.title);

                        //Append description, essentially, the text we will see in the modal
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>NoteID: </b>' + calEvent.noteID));
                        $description.append($('<p/>').html('<b>Date: </b>' + calEvent.start.format("MM-DD-YYYY")));
                        $description.append($('<p/>').html('<b>Memory: </b>' + calEvent.description));
                        $('#myModal #pDetails').empty().html($description);

                        $('#myModal').modal();
                    },

                    selectable: true,

                    select: function (start, end) {
                        selectedEvent = {
                            noteID: 0,
                            title: '',
                            description: '',
                            start: start
                        };
                        openAddEditForm();
                        $('#calendar').fullCalendar('unselect');
                    },

                    editable: true,

                    eventDrop: function (event) {
                        var data = {
                            NoteID: event.noteID,
                            Note: event.title,
                            Date: event.start.format('MM/DD/YYYY'),
                        };
                        SaveEvent(data);
                    }
                })
            }

            $('#btnEdit').click(function () {
                //Open modal dialog for edit event
                openAddEditForm();
            })
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: "POST",
                        url: '/home/DeleteMemory',
                        data: { 'NoteID': selectedEvent.noteID },
                        success: function (data) {
                            if (data.status) {
                                //Refresh the calendar and hide modal
                                $('#myModal').modal('hide');
                                FetchMemoriesAndRenderCalendar();
                            }
                        },
                        error: function () {
                            alert('Failed to delete memory');
                        }
                    })
                }
            })
            $('#dtp1,#dtp2').datetimepicker({
                format: 'MM/DD/YYYY'
            });

            function openAddEditForm() {
                if (selectedEvent != null) {
                    $('#hdnoteID').val(selectedEvent.noteID);
                    $('#txtDescription').val(selectedEvent.title);
                    $('#txtStart').val(selectedEvent.start.format('MM/DD/YYYY'));
                }
                $('#myModal').modal('hide');
                $('#myModalSave').modal();
            }
            $('#btnSave').click(function () {
                //Validation/
                if ($('#txtDescription').val().trim() == "") {
                    alert('Text required');
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Date required');
                    return;
                }

                var data = {
                    NoteID: $('#hdnoteID').val(),
                    Date: $('#txtStart').val().trim(),
                    Note: $('#txtDescription').val().trim(),
                }
                SaveNote(data);
                // call function for submit data to the server 
            })

            //Token for ValidateAntiForgeryToken
            //var token = $('[name=__RequestVerificationToken]').val();

            function SaveNote(data) {
                $.ajax({
                    type: "POST",
                    url: '/home/SaveMemory',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calendar and hide modal
                            $('#myModalSave').modal('hide');
                            FetchMemoriesAndRenderCalendar();
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                })

            }
        })
    </script>
}

@*<div class="row">
       @if (Request.IsAuthenticated)
       {
           <div class="col-md-4">
               <h2>Add a memory</h2>
               <p>We know you're busy. That's why we make it easy to add memories of your child's firsts.</p>
               <p>Whether it's the first time they rolled over or their first haircut, enter it here so you can look at it forever.</p>
               @Html.ActionLink("Make a new memory", "NewMemory", "Memory", null, new { @class = "nav-links" })
           </div>
       }
       else
       {
           <div class="col-md-4">
               <h2>Memories at a Glance</h2>
               <p>This application will allow you to enter memories of your child's "firsts".</p>
           </div>
       }
    </div>*@
